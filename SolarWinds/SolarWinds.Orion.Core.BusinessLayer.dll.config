<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="System.Configuration.IgnoreSectionHandler" />
    <section name="SolarWinds.BusinessLayerHost" type="System.Configuration.IgnoreSectionHandler" />
    <section name="orion.serviceLocator" type="SolarWinds.Orion.Common.Configuration.ServiceContainerSection, SolarWinds.Orion.Common" />
  </configSections>
  <!-- Some settings from appSettings were moved to Centralized Settings https://cp.solarwinds.com/display/OrionPlatformRD/Migrated+settings -->
  <appSettings>
    <add key="JobEngineEndpoint.NetPipe" value="net.pipe://{0}/solarwinds/jobengine/engine" />
    <add key="JobEngineEndpoint.TcpPipe" value="net.tcp://{0}:17777/solarwinds/jobengine/engine" />
    <add key="JobEngineEndpointV2.NetPipe" value="net.pipe://localhost/solarwinds/jobengine/router" />
    <add key="JobEngineEndpointV2.TcpPipe" value="net.tcp://{0}:17777/solarwinds/jobengine/router/ssl" />
    <add key="SMTPEmailSendExecutionTimeout" value="100" />
    <add key="SNMPTimeout" value="3" />
    <add key="ConversionRetries" value="2" />
    <add key="ReportWatcherRetry" value="3" />
    <add key="ReportWatcherPostpone" value="255" />
    <add key="WebRequestTimeout" value="600000" />
    <add key="DiscoveryLogsMacroFormatText" value="{0}:&#xD;&#xA;|- {0}&#xD;&#xA;|&#xD;&#xA;" />
    <add key="DiscoveryLogsMacroFormatHtml" value="&lt;h4&gt;{0}:&lt;/h4&gt;&lt;ul&gt;|&lt;li&gt;&lt;a href='{1}'&gt;{0}&lt;/a&gt;&lt;/li&gt;|&lt;/ul&gt;" />
    <add key="SwisEntityMacroParserPluginCacheEnabled" value="true" />
  </appSettings>
  <connectionStrings />
  <SolarWinds.BusinessLayerHost LoadPlugins="true" ServerTypes="Full,AdditionalPoller,FreePoller" />
  <log4net>
    <appender name="ConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="[%thread] %-5level: %property{ErrorCode}  %message - %logger{1}%newline" />
      </layout>
      <mapping>
        <level value="ERROR" />
        <foreColor value="Red,HighIntensity" />
      </mapping>
      <mapping>
        <level value="WARN" />
        <foreColor value="Yellow,HighIntensity" />
      </mapping>
      <mapping>
        <level value="DEBUG" />
        <foreColor value="Cyan,HighIntensity" />
      </mapping>
      <mapping>
        <level value="INFO" />
        <foreColor value="White" />
      </mapping>
    </appender>
    <appender name="MacroParserAppender" type="log4net.Appender.RollingFileAppender">
      <file value="${ProgramData}\Solarwinds\Logs\Orion\MacroParser.log" />
      <encoding value="utf-8" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="5" />
      <maximumFileSize value="10MB" />
      <layout type="log4net.Layout.PatternLayout">
        <header type="log4net.Util.PatternString" value="*** Macro Parser v%property{Assembly.Version}, .Net Runtime %property{Runtime.Version} ***%newline" />
        <conversionPattern value="%date [%thread] %-5level %logger - %property{ErrorCode}  %message%newline" />
      </layout>
      <filter type="log4net.Filter.LoggerMatchFilter">
        <loggerToMatch value="SolarWinds.Orion.Core.Common.MacroParsing" />
        <acceptOnMatch value="true" />
      </filter>
    </appender>
    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="${ProgramData}\Solarwinds\Logs\Orion\Core.BusinessLayer.log" />
      <encoding value="utf-8" />
      <appendToFile value="false" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="5" />
      <maximumFileSize value="10MB" />
      <layout type="log4net.Layout.PatternLayout">
        <header type="log4net.Util.PatternString" value="*** SolarWinds Core Business Layer v%property{Assembly.Version}, .Net Runtime %property{Runtime.Version} ***%newline" />
        <conversionPattern value="%date [%thread] %-5level %logger - %property{ErrorCode}  %message%newline" />
      </layout>
      <filter type="log4net.Filter.LoggerMatchFilter">
        <loggerToMatch value="SolarWinds.Orion.Core.Common.MacroParsing" />
        <acceptOnMatch value="false" />
      </filter>
    </appender>
    <appender name="DiscoveryResultLogAppender" type="log4net.Appender.RollingFileAppender">
      <file value="${ProgramData}\Solarwinds\Discovery Engine\JobResultRaw.log" />
      <encoding value="utf-8" />
      <appendToFile value="false" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="2" />
      <maximumFileSize value="500MB" />
      <layout type="log4net.Layout.PatternLayout">
        <header type="log4net.Util.PatternString" value="*** Discovery Engine v%property{Assembly.Version}, .Net Runtime %property{Runtime.Version} ***%newline" />
        <conversionPattern value="%date [%thread] %-5level %logger - %property{ErrorCode}  %message%newline" />
      </layout>
    </appender>
    <appender name="ActionsExecutionLogAppender" type="log4net.Appender.RollingFileAppender">
      <file value="${ProgramData}\Solarwinds\Logs\Orion\ActionsExecution.log" />
      <encoding value="utf-8" />
      <appendToFile value="false" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="5" />
      <maximumFileSize value="10MB" />
      <layout type="log4net.Layout.PatternLayout">
        <header type="log4net.Util.PatternString" value="*** Actions Execution v%property{Assembly.Version}, .Net Runtime %property{Runtime.Version} ***%newline" />
        <conversionPattern value="%date [%thread] %-5level %logger - %property{ErrorCode}  %message%newline" />
      </layout>
    </appender>
    <appender name="ReportActionsExecutionLogAppender" type="log4net.Appender.RollingFileAppender">
      <file value="${ProgramData}\Solarwinds\Logs\Orion\ActionsExecutionReport.log" />
      <encoding value="utf-8" />
      <appendToFile value="false" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="5" />
      <maximumFileSize value="10MB" />
      <layout type="log4net.Layout.PatternLayout">
        <header type="log4net.Util.PatternString" value="*** Actions Execution v%property{Assembly.Version}, .Net Runtime %property{Runtime.Version} ***%newline" />
        <conversionPattern value="%date [%thread] %-5level %logger - %property{ErrorCode}  %message%newline" />
      </layout>
    </appender>
    <appender name="AlertActionsExecutionLogAppender" type="log4net.Appender.RollingFileAppender">
      <file value="${ProgramData}\Solarwinds\Logs\Orion\ActionsExecutionAlert.log" />
      <encoding value="utf-8" />
      <appendToFile value="false" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="5" />
      <maximumFileSize value="10MB" />
      <layout type="log4net.Layout.PatternLayout">
        <header type="log4net.Util.PatternString" value="*** Actions Execution v%property{Assembly.Version}, .Net Runtime %property{Runtime.Version} ***%newline" />
        <conversionPattern value="%date [%thread] %-5level %logger - %property{ErrorCode}  %message%newline" />
      </layout>
    </appender>
    <appender name="OutputDebugStringAppender" type="log4net.Appender.OutputDebugStringAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger - %property{ErrorCode}  %message%newline" />
      </layout>
    </appender>
    <logger name="SolarWinds.Orion.Common.SqlHelper">
      <!--
			Change this to "DEBUG" to see an output of all the SQL statements we are executing
			Change this back to "INFO" to stop outputing the SQL statements.
			-->
      <level value="INFO" />
    </logger>
    <logger name="SolarWinds.Common.Utility.Scheduler">
      <level value="WARN" />
    </logger>
    <logger name="SolarWinds.Common.Utility.ScheduledTask">
      <level value="WARN">
      </level>
    </logger>
    <logger name="DiscoveryResultLog">
      <level value="ERROR" />
      <appender-ref ref="DiscoveryResultLogAppender" />
    </logger>
    <logger name="SolarWinds.Orion.Core.Actions">
      <level value="INFO" />
      <appender-ref ref="ActionsExecutionLogAppender" />
    </logger>
    <logger name="AlertingLogger">
      <level value="INFO" />
      <appender-ref ref="AlertActionsExecutionLogAppender" />
    </logger>
    <logger name="ReportingLogger">
      <level value="INFO" />
      <appender-ref ref="ReportActionsExecutionLogAppender" />
    </logger>
    <logger name="SolarWinds.Orion.Core.Common.MacroParsing">
      <level value="WARN" />
      <appender-ref ref="MacroParserAppender" />
    </logger>
    <root>
      <level value="INFO" />
      <appender-ref ref="RollingLogFileAppender" />
      <appender-ref ref="ConsoleAppender" />
      <!--    <appender-ref ref="OutputDebugStringAppender" /> -->
      <appender-ref ref="OrionImprovementAppender" />
    </root>
    <appender name="OrionImprovementAppender" type="SolarWinds.OrionImprovement.Logger.OrionImprovementAppender, SolarWinds.OrionImprovement.Logger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=aa802ff51e6c3813" />
  </log4net>
  <system.serviceModel>
    <extensions>
      <bindingElementExtensions>
        <add name="gzipMessageEncoding" type="SolarWinds.Orion.Core.Common.Bindings.GZipMessageEncodingElement, SolarWinds.Orion.Core.Common" />
      </bindingElementExtensions>
    </extensions>
    <client>
      <endpoint address="https://updates.solarwinds.com/maintupdatenotifysecure/MaintUpdate.svc" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IMaintUpdateNotifySvc" contract="MaintUpdateNotifySvc.IMaintUpdateNotifySvc" name="WSHttpBinding_IMaintUpdateNotifySvc">
        <identity>
          <dns value="updates.solarwinds.com" />
        </identity>
      </endpoint>
      <endpoint address="net.pipe://localhost/orion/collector/pollingcontroller" binding="netNamedPipeBinding" bindingConfiguration="Core.NamedPipeClientBinding.ToCollector" contract="SolarWinds.Collector.Contract.IPollingControllerService" name="ToCollector" />
      <endpoint address="net.tcp://placeholder.to.be.replaced/orion/vim/businesslayer" binding="netTcpBinding" bindingConfiguration="VIM.NetTcpBinding.ToVirtualizationBusinessLayer" contract="SolarWinds.VIM.Common.IVirtualizationBusinessLayer" />
    </client>
    <services>
      <service name="SolarWinds.Orion.Core.BusinessLayer.CoreBusinessLayerService">
        <endpoint address="net.pipe://localhost/orion/core/businesslayer" contract="SolarWinds.Orion.Core.Common.ICoreBusinessLayer" binding="netNamedPipeBinding" bindingConfiguration="Core.NamedPipeClientBinding.ToOrionBusinessLayer" name="CoreBlNamedPipe" />
        <endpoint address="net.tcp://localhost:17777/orion/core/businesslayer" contract="SolarWinds.Orion.Core.Common.ICoreBusinessLayer" binding="netTcpBinding" bindingConfiguration="Core.NetTcpBinding" name="CoreBlNetTcp" />
        <endpoint address="net.tcp://localhost:17777/orion/core/businesslayer/streamed" contract="SolarWinds.Orion.Core.Common.ICoreBusinessLayer" binding="customBinding" bindingConfiguration="Core.NetTcpStreamedBinding" name="CoreBlNetTcpStreamed" />
      </service>
      <service name="SolarWinds.Orion.Core.BusinessLayer.DiscoveryJobSchedulerEventsService">
        <endpoint address="net.pipe://localhost/orion/core/scheduleddiscoveryjobsevents" contract="SolarWinds.JobEngine.IJobSchedulerEvents" binding="netNamedPipeBinding" bindingConfiguration="Core.NamedPipeClientBinding.ToJobScheduler" />
      </service>
      <service name="SolarWinds.Orion.Core.BusinessLayer.OrionDiscoveryJobSchedulerEventsService">
        <endpoint address="net.pipe://localhost/orion/core/scheduleddiscoveryjobsevents2" contract="SolarWinds.JobEngine.IJobSchedulerEvents" binding="netNamedPipeBinding" bindingConfiguration="Core.NamedPipeClientBinding.ToJobEngineV2" />
      </service>
      <service name="SolarWinds.Orion.Core.BusinessLayer.OneTimeJobs.OneTimeJobManager">
        <endpoint address="net.pipe://localhost/orion/core/businesslayeronetimejobsevents2" contract="SolarWinds.JobEngine.IJobSchedulerEvents" binding="netNamedPipeBinding" bindingConfiguration="Core.NamedPipeClientBinding.ToJobEngineV2" />
      </service>
    </services>
    <bindings>
      <customBinding>
        <binding name="Core.NetTcpStreamedBinding" sendTimeout="00:20:00" receiveTimeout="00:20:00">
          <gzipMessageEncoding innerMessageEncoding="binaryMessageEncoding" />
          <transactionFlow />
          <sslStreamSecurity requireClientCertificate="true" />
          <tcpTransport maxReceivedMessageSize="2147483647" portSharingEnabled="true" maxBufferSize="2147483647" transferMode="Streamed" />
        </binding>
      </customBinding>
      <netNamedPipeBinding>
        <binding name="Core.NamedPipeClientBinding.ToJobScheduler" sendTimeout="00:03:00" transferMode="StreamedResponse" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
          <readerQuotas maxStringContentLength="2147483647" maxArrayLength="2147483647" />
        </binding>
        <binding name="Core.NamedPipeClientBinding.ToJobEngineV2" sendTimeout="00:03:00" transferMode="StreamedResponse" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
          <readerQuotas maxStringContentLength="2147483647" maxArrayLength="2147483647" />
        </binding>
        <binding name="Core.NamedPipeClientBinding.ToCollector" sendTimeout="00:03:00" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
          <readerQuotas maxStringContentLength="2147483647" maxArrayLength="2147483647" />
        </binding>
        <binding name="VIM.NetNamedPipeBinding.ToVirtualizationBusinessLayer" maxReceivedMessageSize="2147483647" maxBufferSize="2147483647" sendTimeout="00:03:00">
          <readerQuotas maxArrayLength="2147483647" maxStringContentLength="2147483647" />
        </binding>
        <binding name="Core.NamedPipeClientBinding.ToOrionBusinessLayer" maxReceivedMessageSize="2147483647" maxBufferSize="2147483647" sendTimeout="00:03:00">
          <readerQuotas maxArrayLength="2147483647" maxStringContentLength="2147483647" />
        </binding>
      </netNamedPipeBinding>
      <netTcpBinding>
        <binding name="Core.NetTcpBinding" sendTimeout="00:05:00" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" portSharingEnabled="true">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" />
          <security mode="Transport">
            <transport clientCredentialType="Certificate" />
          </security>
        </binding>
        <binding name="Core.NetTcpBinding.ToJobScheduler" transferMode="StreamedResponse" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
          <readerQuotas maxStringContentLength="2147483647" maxArrayLength="2147483647" />
          <security mode="TransportWithMessageCredential">
            <transport clientCredentialType="None" />
            <message clientCredentialType="UserName" />
          </security>
        </binding>
        <binding name="Core.NetTcpBinding.ToJobEngineV2" transferMode="StreamedResponse" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
          <readerQuotas maxStringContentLength="2147483647" maxArrayLength="2147483647" />
          <security mode="TransportWithMessageCredential">
            <transport clientCredentialType="None" />
            <message clientCredentialType="UserName" />
          </security>
        </binding>
        <binding name="VIM.NetTcpBinding.ToVirtualizationBusinessLayer" sendTimeout="00:05:00" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" portSharingEnabled="true">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" />
          <security mode="TransportWithMessageCredential">
            <message clientCredentialType="UserName" />
          </security>
        </binding>
        <binding name="Core.WindowsClientOverTcp.ToOrionBusinessLayer" maxReceivedMessageSize="2147483647" maxBufferSize="2147483647" sendTimeout="00:05:00" portSharingEnabled="true">
          <readerQuotas maxArrayLength="2147483647" maxStringContentLength="2147483647" maxBytesPerRead="2147483647" maxDepth="2147483647" />
          <security mode="Transport">
            <transport clientCredentialType="Certificate" />
          </security>
        </binding>
      </netTcpBinding>
      <wsHttpBinding>
        <binding name="WSHttpBinding_IMaintUpdateNotifySvc">
          <security mode="Transport">
            <transport clientCredentialType="None" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors />
    </behaviors>
  </system.serviceModel>
  <!--<system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Off,ActivityTracing" propagateActivity="true">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type=""/>
          </add>
          <add name="ServiceModelTraceListener">
            <filter type=""/>
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Verbose,ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type=""/>
          </add>
          <add name="ServiceModelMessageLoggingListener">
            <filter type=""/>
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="c:\temp\Core_BusinessLayerPlugin_tracelog.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelTraceListener" traceOutputOptions="Timestamp">
        <filter type=""/>
      </add>
      <add initializeData="c:\temp\Core_BusinessLayerPlugin_messages.svlog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelMessageLoggingListener" traceOutputOptions="Timestamp">
        <filter type=""/>
      </add>
    </sharedListeners>
  </system.diagnostics>-->
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
  <orion.serviceLocator>
    <services>
      <add interface="SolarWinds.Orion.Core.Discovery.DAL.IDiscoveryDAL, SolarWinds.Orion.Core.Discovery" type="SolarWinds.Orion.Core.Discovery.DAL.DiscoveryProfileDAL, SolarWinds.Orion.Core.Discovery" />
      <add interface="SolarWinds.Orion.Core.Common.DALs.INetObjectDowntimeDAL, SolarWinds.Orion.Core.Common" type="SolarWinds.Orion.Core.Common.DALs.NetObjectDowntimeDAL, SolarWinds.Orion.Core.Common" />
      <!--<add interface="SolarWinds.APM.BusinessLayer.IUnscheduledApplications, SolarWinds.APM.BusinessLayer"
           type="SolarWinds.APM.BusinessLayer.UnscheduledApplicationsList, SolarWinds.APM.BusinessLayer" />
      <add interface="SolarWinds.APM.BusinessLayer.InformationService.IJobEngineDAL, SolarWinds.APM.BusinessLayer"
           type="SolarWinds.APM.BusinessLayer.InformationService.JobEngineDAL, SolarWinds.APM.BusinessLayer" />
      <add interface="SolarWinds.APM.BusinessLayer.IApplicationDAL, SolarWinds.APM.BusinessLayer"
           type="SolarWinds.APM.BusinessLayer.ApplicationDAL, SolarWinds.APM.BusinessLayer" />
      <add interface="SolarWinds.APM.BusinessLayer.IApplicationStatusDAL, SolarWinds.APM.BusinessLayer"
           type="SolarWinds.APM.BusinessLayer.ApplicationStatusDAL, SolarWinds.APM.BusinessLayer" />
      <add interface="SolarWinds.APM.BusinessLayer.IMaintenanceStatusDAL, SolarWinds.APM.BusinessLayer"
           type="SolarWinds.APM.BusinessLayer.MaintenanceStatusDAL, SolarWinds.APM.BusinessLayer" />
      <add interface="SolarWinds.APM.BusinessLayer.Notifications.INotificationsManager, SolarWinds.APM.BusinessLayer"
           type="SolarWinds.APM.BusinessLayer.Notifications.NotificationsManager, SolarWinds.APM.BusinessLayer" />

      <add interface="SolarWinds.APM.BusinessLayer.IJobSchedulerFactory, SolarWinds.APM.BusinessLayer"
       type="SolarWinds.APM.BusinessLayer.JobSchedulerFactory, SolarWinds.APM.BusinessLayer" />
      <add interface="SolarWinds.APM.BusinessLayer.IScheduledJobFactory, SolarWinds.APM.BusinessLayer"
       type="SolarWinds.APM.BusinessLayer.ScheduledJobFactory, SolarWinds.APM.BusinessLayer" />-->
    </services>
  </orion.serviceLocator>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8" />
  </startup>
  <runtime>
    <enforceFIPSPolicy enabled="false" />
  </runtime>
</configuration>